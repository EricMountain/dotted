#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '

[[ -d ~/.profile.d ]] && for x in ~/.profile.d/*.sh ; do source $x ; done

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

export EDITOR=vim

PS0='$(touch $TMPDIR/.bash.cmd.start.pid.$$)'

# Git prompt
# Configure Git to output in colour: git config --global color.ui true
source /usr/share/git/completion/git-prompt.sh

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto verbose name"
export GIT_PS1_SHOWCOLORHINTS=1

set_prompt () {
    Last_Command=$? # Must come first!

    starttime=$(stat --format="%Y" $TMPDIR/.bash.cmd.start.pid.$$ 2> /dev/null)
    if [[ -n $starttime ]] ; then
        duration=$(date "+%s" -d "now -$starttime seconds")
    else
        duration=
    fi

    Blue='\e[01;34m'
    White='\e[01;37m'
    Red='\e[01;31m'
    Green='\e[01;32m'
    Yellow='\e[01;33m'
    Magenta='\e[01;35m'
    Cyan='\e[01;36m'
    Reset='\e[00m'
    FancyX='\342\234\227'
    Checkmark='\342\234\223'

    prompt=""
    # If last command was successful, print a green check
    # mark. Otherwise, print a red X.
    if [[ $Last_Command == 0 ]]; then
        prompt+="$Green[ $Checkmark "
    else
        prompt+="$Red[ $FancyX "
    fi

    [[ -n $duration ]] && prompt+="$duration\" "
    prompt+="]"
    
    # and reset the text color to the default.
    prompt+="$Reset"

    printf "$prompt"
}
PROMPT_COMMAND='__git_ps1 "\n\$(set_prompt) \[\e[01;36m\]\u@\h \[\e[01;37m\]\W\[\e[00m\]" "\n\[\e[01;35m\]‚ùØ\[\e[00m\] "'

for d in $HOME/.VScode-linux-x64/bin $HOME/.gem/ruby/2.3.0/bin $HOME/dev/etcd/bin /opt/HipChat4/bin $HOME/bin ; do
    [[ -d $d ]] && export PATH=$PATH:$d
done

[[ -z "$TMPDIR" ]] && export TMPDIR="/tmp/$USER"
[[ ! -d "$TMPDIR" ]] && export TMPDIR="/tmp/$USER" && mkdir -m 700 "$TMPDIR"

alias gl='git log --graph --decorate --date=relative --format="%C(yellow)%h%C(reset) %C(green)%cr%Creset %s%C(bold red)%d%C(white) [%aN]%C(reset)"'
alias gla='git log --graph --decorate --date=relative --format="%C(yellow)%h%C(reset) %C(green)%cr%Creset %s%C(bold red)%d%C(white) [%aN]%C(reset)" --all'
alias gv='git describe --tags --always --dirty'
alias grel='git log $1^..$2 --pretty=oneline --graph --decorate --no-merges'
alias doSshFS='echo sshfs -o transform_symlinks user@machine:/ ~/sshfs_mount/'
alias doScreen='echo ssh -t user@machine screen -D -RR'
alias smtpclient_test='echo gnutls-cli -V --crlf --starttls some_smtp_mailhub --port 587'
alias smtpclient_test2='echo gnutls-cli --crlf --starttls some_smtp_mailhub --port 587 --insecure'
alias dockerlogin='echo curl --insecure --user emountain https://dockerhub.wherever:5000/v2/auth'

if [[ -f $HOME/.set-openstack-credentials ]] ; then
   . $HOME/.set-openstack-credentials
fi
