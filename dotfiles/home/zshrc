#!/usr/bin/zsh

# Todo:
# ls hyperlinks

# bash #####################################################################
. ~/.bashrc

# Load Awesome fonts #######################################################
if grep -q 'NAME="Ubuntu"' /etc/os-release; then
	FONT_DIR=~/.fonts
elif grep -q 'NAME="Arch Linux"' /etc/os-release; then
	FONT_DIR=~/.local/share/fonts
fi

setopt -o null_glob
for x in $(find ${FONT_DIR} -name \*.sh); do
	source $x
done
setopt +o null_glob

FONT_DIR=

# Oh-my-zsh ################################################################

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

## FIXME TODO - make this install-location independent
source ~/.p10k.zsh

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# alias overrides ##########################################################
alias gl='git pull --ff-only'

# Fuzzy filtering ##########################################################
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ranger ###################################################################
# From https://gist.github.com/android10/3a061b3a85ad9fd6832ae25efc4381b0
# Ctrl-O opens zsh at the current location, and on exit, cd into ranger's last location.
ranger-cd() {
	tempfile=$(mktemp)
	ranger --choosedir="$tempfile" "${@:-$(pwd)}" <$TTY
	test -f "$tempfile" &&
		if [ "$(cat -- "$tempfile")" != "$(echo -n $(pwd))" ]; then
			cd -- "$(cat "$tempfile")"
		fi
	rm -f -- "$tempfile"
	# hacky way of transferring over previous command and updating the screen
	VISUAL=true zle edit-command-line
}
zle -N ranger-cd
bindkey '^o' ranger-cd

# VSCode ###################################################################
vscode-current-directory() {
	code .
}
zle -N vscode-current-directory
bindkey '^v' vscode-current-directory
