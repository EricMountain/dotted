#!/usr/bin/zsh

# Todo:
# ls hyperlinks

# OS detection ################################################################
if grep -q 'NAME="Ubuntu"' /etc/os-release 2> /dev/null ; then
    OS_CLASS=Linux
    OS_DIST=Ubuntu
elif grep -q 'NAME="Arch Linux"' /etc/os-release 2> /dev/null ; then
    OS_CLASS=Linux
    OS_DIST=ArchLinux
elif [ "$(uname)" = "Darwin" ]; then
    OS_CLASS=Darwin
    OS_DIST=Apple
else
    echo Unknown OS/distribution.
    exit 1
fi

case ${OS_CLASS} in
    Linux)
    FONT_DIR=~/.local/share/fonts
    ;;
    Darwin)
    export PATH="/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/bin:$PATH:$HOME/go/src/github.com/DataDog/devtools/bin"
    export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
    FONT_DIR=~/Library/Fonts
    ;;
esac
[[ -d ${FONT_DIR} ]] || mkdir -p ${FONT_DIR}

# Specific pre-stuff #######################################################
if [ -d ~/.local-config.d ] ; then
    setopt -o null_glob
    for x in $(find ~/.local-config.d -name \*.zsh); do
        source $x
    done
    setopt +o null_glob
fi

# bash #####################################################################
. ~/.bashrc

# Load Awesome fonts codepoint mappings ####################################
setopt -o null_glob
for x in $(find ${FONT_DIR} -name \*.sh); do
    source $x
done
setopt +o null_glob

FONT_DIR=

# Oh-my-zsh ################################################################

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

source ~/.p10k.zsh

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# Not used:
# - history-substring-search: fzf is better
plugins=(git encode64 docker gpg-agent zsh-syntax-highlighting zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# alias overrides ##########################################################
alias gl='git pull --ff-only'
alias gpo='git push -u origin "$(git_current_branch)"'

# Fuzzy filtering ##########################################################
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ranger ###################################################################
# From https://gist.github.com/android10/3a061b3a85ad9fd6832ae25efc4381b0
# Ctrl-O opens zsh at the current location, and on exit, cd into ranger's last location.
ranger-cd() {
    tempfile=$(mktemp)
    ranger --choosedir="$tempfile" "${@:-$(pwd)}" <$TTY
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n $(pwd))" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
    # hacky way of transferring over previous command and updating the screen
    VISUAL=true zle edit-command-line
}
zle -N ranger-cd
bindkey '^o' ranger-cd

# VSCode ###################################################################
vscode-current-directory() {
    if which code-insiders > /dev/null ; then
        code-insiders .
    else
        code .
    fi
}
zle -N vscode-current-directory
bindkey '^v' vscode-current-directory

# Completion ###############################################################
for x in oc kubectl ; do
    if $x completion zsh > $TMPDIR/zsh_completion.sh 2> /dev/null ; then
        source $TMPDIR/zsh_completion.sh
        rm $TMPDIR/zsh_completion.sh
    fi
done

# Kube Config ##############################################################
export KUBECONFIG="$(mktemp $TMPDIR/.kube.XXXXXXXXX)"
kubeconfig-zshexit-hook() {
    rm -f $KUBECONFIG
}
zshexit_functions+=( kubeconfig-zshexit-hook )

# Go projects ##############################################################
if [ -d ~/dev/go ] ; then
    setopt -o null_glob
    for x in $(find ~/dev/go -maxdepth 2 -name \*.rc); do
        source $x
    done
    setopt +o null_glob
fi
